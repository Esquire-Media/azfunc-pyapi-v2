from .base import (
    FeatureBaseSchema,
    GeoJsonBaseSchema,
)
from .min_max import PropertiesWithMinMax
from marshmallow import fields

DemographicsOptions = [
    "location (venue)",
    "state",
    "city",
    "zip",
    "zip4",
    "hashed device id",
    "number of instances (count seen at location)",
    "cbmsa_name",
    "msa_name",
    "fips_name",
    "male",
    "female",
    "married",
    "dwelling_type apt/multi-family",
    "dwelling_type single family",
    "completed high school",
    "some college",
    "completed college",
    "completed graduate school",
    "attended vocational/technical school",
    "household_income under $15000",
    "household_income $15000 - $24999",
    "household_income $25000 - $34999",
    "household_income $35000 - $49999",
    "household_income $50000 - $74999",
    "household_income $75000 - $99999",
    "household_income $100000 - $149999",
    "household_income $150000 - $159999",
    "household_income $160000 - $164999",
    "household_income $165000 - $199999",
    "household_income $200000 - $249999",
    "household_income $250000+",
    "household_size",
    "home_owner",
    "networth less than $50000",
    "networth $50000 - $99999",
    "networth $100000 - $249999",
    "networth $250000 - $499999",
    "networth $500000+",
    "presence_of_children",
    "presence_of_single_adult",
    "presence_of_young_adult",
    "presence_of_senior_adult",
    "presence_of_veteran",
    "estimated_age 18-24",
    "estimated_age 25-29",
    "estimated_age 30-34",
    "estimated_age 35-39",
    "estimated_age 40-44",
    "estimated_age 45-49",
    "estimated_age 50-54",
    "estimated_age 55-59",
    "estimated_age 60-64",
    "estimated_age 65-69",
    "estimated_age 70+",
    "buyer_children_apparel",
    "buyer_men_apparel",
    "buyer_big_and_tall_men_apparel",
    "buyer_women_apparel",
    "buyer_petite_women_apparel",
    "buyer_plus_women_apparel",
    "buyer_young_men_apparel",
    "buyer_young_women_apparel",
    "buyer_audio_books_and_music",
    "buyer_auto",
    "buyer_cosmetic_products",
    "buyer_books_and_magazines",
    "buyer_children_products",
    "buyer_gardening_products",
    "buyer_health_and_beauty_products",
    "buyer_high_end_appliances",
    "buyer_hunting_and_shooting",
    "buyer_jewelry",
    "buyer_lifestyles",
    "buyer_luggage",
    "buyer_mail_orders",
    "buyer_mail_order_responder",
    "buyer_online_products",
    "buyer_photography",
    "buyer_religious_material",
    "buyer_sports",
    "buyer_value_priced_merchandise",
    "interest_arts",
    "interest_arts_antiques",
    "interest_auto",
    "interest_aviation",
    "interest_collector",
    "interest_board_games",
    "interest_sailing",
    "interest_camping",
    "interest_career",
    "interest_cat",
    "interest_children",
    "interest_antiques",
    "interest_coins",
    "interest_collectibles",
    "interest_lifestyles",
    "interest_military",
    "interest_sports",
    "interest_stamps",
    "interest_art_collectibles",
    "interest_computing_home_office",
    "interest_cooking",
    "interest_gourmet_cooking",
    "interest_crafts",
    "interest_cruise",
    "interest_diet",
    "interest_dog",
    "interest_domestic_travel",
    "interest_education",
    "interest_aerobic",
    "interest_running",
    "interest_walking",
    "interest_fishing",
    "interest_food_wines",
    "interest_gambling",
    "interest_golf",
    "interest_health_medical",
    "interest_home_gardening",
    "interest_home_furnishings",
    "interest_home_improvement",
    "interest_diy",
    "interest_house_plants",
    "interest_hunting",
    "interest_career_improvement",
    "interest_christian_family",
    "interest_grandchildren",
    "interest_parenting",
    "interest_pets",
    "interest_international_travel",
    "interest_equestrian",
    "interest_knitting",
    "interest_motorcycling",
    "interest_musical_instruments",
    "interest_nascar",
    "interest_natural_foods",
    "interest_other_pet",
    "interest_photography",
    "interest_scuba_diving",
    "interest_self_improvement",
    "interest_snow_skiing",
    "interest_sweepstakes",
    "interest_tennis",
    "interest_travel",
    "interest_woodworking",
    "interest_working_women",
    "entertain_gaming",
    "entertain_dvds",
    "entertain_tv_movies",
    "entertain_computers",
    "entertain_pc_games",
    "entertain_music_home_stereo",
    "entertain_music_player",
    "entertain_music_listener",
    "entertain_movies",
    "entertain_tv",
    "entertain_videos_games",
    "entertain_satellite",
    "entertain_theater",
    "entertain_music",
    "donor_contribution",
    "donor_mail_order",
    "donor_charitable",
    "donor_animal",
    "donor_arts",
    "donor_children",
    "donor_wildlife",
    "donor_environment",
    "donor_health",
    "donor_international_aid",
    "donor_political",
    "donor_political_conser",
    "donor_political_liberal",
    "donor_community",
    "donor_religious",
    "donor_veteran",
    "donor_other",
    "spectator_auto",
    "spectator_sports_tv",
    "spectator_football",
    "spectator_baseball",
    "spectator_basketball",
    "spectator_hockey",
    "spectator_soccer",
]


class PropertiesDemographicsSchema(PropertiesWithMinMax):
    demographics = fields.List(
        fields.Str(validate=fields.validate.OneOf(DemographicsOptions)),
        default=DemographicsOptions,
    )


class FeatureDemographicsSchema(FeatureBaseSchema):
    properties = fields.Nested(
        PropertiesDemographicsSchema,
        missing=dict,
    )


class GeoJsonDemographicsSchema(GeoJsonBaseSchema):
    features = fields.List(
        fields.Nested(FeatureDemographicsSchema),
        required=True,
    )
